name: Versioning and build

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    container: node:18
    outputs:
      version: ${{ steps.semantic_release.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: 'true'
      - name: Run semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/exec
          semantic-release
          cat VERSION
          echo "::set-output name=VERSION::v$(cat VERSION)"

      - uses: actions/upload-artifact@v3
        with:
          path: CHANGELOG.md

  build:
    runs-on: ubuntu-latest
    container: golang:${{matrix.golang_version}}
    needs: semantic-release
    strategy:
      matrix:
        golang_version:
          - 1.18
          - 1.19
        goos:
          - linux
          - darwin
        goarch:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run build
        run: |
          export CGO_ENABLED=0
          export GOOS="${{matrix.goos}}"
          export GOARCH="${{matrix.goarch}}"
          export VERSION="${{ needs.semantic-release.outputs.version }}"
          apt-get update && apt-get install -y upx
          go build -ldflags="-s -w" -o "slagbot-golang${GOLANG_VERSION}-${GOOS}-${GOARCH}-${VERSION}" cmd/slagbot/main.go
          upx -9 -k slagbot-golang${GOLANG_VERSION}-${GOOS}-${GOARCH}-${VERSION}
          rm slagbot-*~

      - uses: actions/upload-artifact@v3
        with:
          path: slagbot-golang*

  create-release:
    runs-on: ubuntu-latest
    needs:
      - semantic-release
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.semantic-release.outputs.version }}
          release_name: Release ${{ needs.semantic-release.outputs.version }}
          draft: false
          prerelease: false
          body_path: artifact/CHANGELOG.md
      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm ./artifact/CHANGELOG.md
          for item in $(ls -1 artifact); do
            hub release edit ${{ needs.semantic-release.outputs.version }} -m "" -a ./artifact/$item
          done
#      - name: Upload release assets
#        id: upload_release_assets
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}